{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-12T10:40:43.907Z",
    "end": "2023-03-12T10:40:46.545Z",
    "duration": 2638,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "593b3809-f4a8-4fe0-8c35-c2701225f357",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3394d269-e8de-43c5-86aa-8b005a1a754f",
          "title": "Positif Case Delete",
          "fullFile": "/Users/naufalazhar/Documents/NAUFAL_AZHAR/mocha_reqres/test/TestDelete.js",
          "file": "/test/TestDelete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should delete an existing user",
              "fullTitle": "Positif Case Delete Should delete an existing user",
              "timedOut": false,
              "duration": 1677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.testDelete()\n.send({\n    name: \"morpheus\",\n    job: \"leader\"\n    })\n    var Delete = response.body;\nexpect(response.status).to.equal(204);\nconsole.log(Delete);",
              "err": {},
              "uuid": "2ae24950-7d55-4250-8b17-a9f26dee374c",
              "parentUUID": "3394d269-e8de-43c5-86aa-8b005a1a754f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ae24950-7d55-4250-8b17-a9f26dee374c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "8c7286bf-8fbd-4220-8cb0-ea7f4d84d9ce",
          "title": "Positif Case Get",
          "fullFile": "/Users/naufalazhar/Documents/NAUFAL_AZHAR/mocha_reqres/test/TestGet.js",
          "file": "/test/TestGet.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a list of users",
              "fullTitle": "Positif Case Get should return a list of users",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.testGet()\n    \n    var Get = response.body;\nexpect(response.status).to.equal(200);\nexpect(response.body).to.be.an('object');\nexpect(response.body.data).to.have.property('id', 2);\nexpect(response.body.data).to.have.property('email', 'janet.weaver@reqres.in');\n// expect(response.body.data).to.have.property('name', 'morpheus');\n// expect(response.body.data).to.have.property('job', 'leader');\nconsole.log(Get);",
              "err": {},
              "uuid": "879a624d-f55d-4633-8c06-161bbd60968a",
              "parentUUID": "8c7286bf-8fbd-4220-8cb0-ea7f4d84d9ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "879a624d-f55d-4633-8c06-161bbd60968a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 80,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "b0507f72-98db-472a-bfce-59f3541b35b0",
          "title": "Positif Case Register",
          "fullFile": "/Users/naufalazhar/Documents/NAUFAL_AZHAR/mocha_reqres/test/TestPost.js",
          "file": "/test/TestPost.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "Positif Case Register should create a new user",
              "timedOut": false,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.testLogin()\n.send({\n    email: \"eve.holt@reqres.in\",\n    password: \"pistol\"\n    })\n    var Register = response.body;\nexpect(response.status).to.equal(200);\nexpect(response.body).to.have.property('id', 4);\nexpect(response.body).to.have.property('token');\nconsole.log(Register);",
              "err": {},
              "uuid": "6b5cc4d4-876a-4286-be1d-6752c19202ae",
              "parentUUID": "b0507f72-98db-472a-bfce-59f3541b35b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b5cc4d4-876a-4286-be1d-6752c19202ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "a4a70f2d-5129-439c-a217-4146875af782",
          "title": "Positif Case Put",
          "fullFile": "/Users/naufalazhar/Documents/NAUFAL_AZHAR/mocha_reqres/test/TestPut.js",
          "file": "/test/TestPut.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update an existing user",
              "fullTitle": "Positif Case Put should update an existing user",
              "timedOut": false,
              "duration": 436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await page.putRegister()\n.send({\n    name: \"morpheus\",\n    job: \"zion resident\"\n    })\nassert(response.status).to.equal(200);\nexpect(response.body).to.have.property('name', 'morpheus');\nexpect(response.body).to.have.property('job', 'zion resident');\nvar Put = response.body;\nconsole.log(Put);",
              "err": {},
              "uuid": "4c066571-eefb-4f69-ae0d-98291412785c",
              "parentUUID": "a4a70f2d-5129-439c-a217-4146875af782",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c066571-eefb-4f69-ae0d-98291412785c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 436,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}